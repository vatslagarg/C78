{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\VATSLA GARG\\\\Desktop\\\\C78_ISSTracker_TeacherReferenceCode\\\\screens\\\\IssLocation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport MapView, { Marker } from 'react-native-maps';\nimport axios from \"axios\";\n\nvar IssLocationScreen = function (_Component) {\n  _inherits(IssLocationScreen, _Component);\n\n  var _super = _createSuper(IssLocationScreen);\n\n  function IssLocationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, IssLocationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getIssLocation = function () {\n      axios.get(\"https://api.wheretheiss.at/v1/satellites/25544\").then(function (response) {\n        _this.setState({\n          location: response.data\n        });\n      }).catch(function (error) {\n        Alert.alert(error.message);\n      });\n    };\n\n    _this.state = {\n      location: {}\n    };\n    return _this;\n  }\n\n  _createClass(IssLocationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getIssLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Object.keys(this.state.location).length === 0) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }, \"Loading\"));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }\n        }, React.createElement(SafeAreaView, {\n          style: styles.droidSafeArea,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }\n        }), React.createElement(ImageBackground, {\n          source: require(\"../assets/bg.png\"),\n          style: styles.backgroundImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: styles.titleContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: styles.titleText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }\n        }, \"ISS Location\")), React.createElement(View, {\n          style: styles.mapContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }\n        }, React.createElement(MapView, {\n          style: styles.map,\n          region: {\n            latitude: this.state.location.latitude,\n            longitude: this.state.location.longitude,\n            latitudeDelta: 100,\n            longitudeDelta: 100\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }\n        }, React.createElement(Marker, {\n          coordinate: {\n            latitude: this.state.location.latitude,\n            longitude: this.state.location.longitude\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/iss_icon.png\"),\n          style: {\n            height: 50,\n            width: 50\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }\n        })))), React.createElement(View, {\n          style: styles.infoContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: styles.infoText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }\n        }, \"Latitude: \", this.state.location.latitude), React.createElement(Text, {\n          style: styles.infoText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }\n        }, \"Longitude: \", this.state.location.longitude), React.createElement(Text, {\n          style: styles.infoText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }\n        }, \"Altitude (KM): \", this.state.location.altitude), React.createElement(Text, {\n          style: styles.infoText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }\n        }, \"Velocity (KM/H): \", this.state.location.velocity))));\n      }\n    }\n  }]);\n\n  return IssLocationScreen;\n}(Component);\n\nexport { IssLocationScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  titleContainer: {\n    flex: 0.1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titleText: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  mapContainer: {\n    flex: 0.7\n  },\n  map: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  infoContainer: {\n    flex: 0.2,\n    backgroundColor: 'white',\n    marginTop: -10,\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    padding: 30\n  },\n  infoText: {\n    fontSize: 15,\n    color: \"black\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/VATSLA GARG/Desktop/C78_ISSTracker_TeacherReferenceCode/screens/IssLocation.js"],"names":["React","Component","MapView","Marker","axios","IssLocationScreen","props","getIssLocation","get","then","response","setState","location","data","catch","error","Alert","alert","message","state","Object","keys","length","flex","justifyContent","alignItems","styles","container","droidSafeArea","require","backgroundImage","titleContainer","titleText","mapContainer","map","latitude","longitude","latitudeDelta","longitudeDelta","height","width","infoContainer","infoText","altitude","velocity","StyleSheet","create","marginTop","Platform","OS","StatusBar","currentHeight","resizeMode","fontSize","fontWeight","color","backgroundColor","borderTopLeftRadius","borderTopRightRadius","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    StyleSheet,\r\n    ImageBackground,\r\n    StatusBar,\r\n    SafeAreaView,\r\n    Image,\r\n    Alert,\r\n    Platform\r\n} from 'react-native';\r\nimport MapView, { Marker } from 'react-native-maps';\r\nimport axios from \"axios\";\r\n\r\nexport default class IssLocationScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getIssLocation()\r\n    }\r\n\r\n    getIssLocation = () => {\r\n        axios\r\n            .get(\"https://api.wheretheiss.at/v1/satellites/25544\")\r\n            .then(response => {\r\n                this.setState({ location: response.data })\r\n            })\r\n            .catch(error => {\r\n                Alert.alert(error.message)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (Object.keys(this.state.location).length === 0) {\r\n            return (\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\"\r\n                    }}>\r\n                    <Text>Loading</Text>\r\n                </View>\r\n            )\r\n        } else {\r\n            return (\r\n                <View style={styles.container}>\r\n                    <SafeAreaView style={styles.droidSafeArea} />\r\n                    <ImageBackground source={require('../assets/bg.png')} style={styles.backgroundImage}>\r\n                        <View style={styles.titleContainer}>\r\n                            <Text style={styles.titleText}>ISS Location</Text>\r\n                        </View>\r\n                        <View style={styles.mapContainer}>\r\n                            <MapView\r\n                                style={styles.map}\r\n                                region={{\r\n                                    latitude: this.state.location.latitude,\r\n                                    longitude: this.state.location.longitude,\r\n                                    latitudeDelta: 100,\r\n                                    longitudeDelta: 100\r\n                                }}\r\n                            >\r\n                                <Marker\r\n                                    coordinate={{ latitude: this.state.location.latitude, longitude: this.state.location.longitude }}\r\n                                >\r\n                                    <Image source={require('../assets/iss_icon.png')} style={{ height: 50, width: 50 }} />\r\n                                </Marker>\r\n                            </MapView>\r\n                        </View>\r\n                        <View style={styles.infoContainer}>\r\n                            <Text style={styles.infoText}>Latitude: {this.state.location.latitude}</Text>\r\n                            <Text style={styles.infoText}>Longitude: {this.state.location.longitude}</Text>\r\n                            <Text style={styles.infoText}>Altitude (KM): {this.state.location.altitude}</Text>\r\n                            <Text style={styles.infoText}>Velocity (KM/H): {this.state.location.velocity}</Text>\r\n                        </View>\r\n                    </ImageBackground>\r\n                </View>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    droidSafeArea: {\r\n        marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\r\n    },\r\n    backgroundImage: {\r\n        flex: 1,\r\n        resizeMode: 'cover',\r\n    },\r\n    titleContainer: {\r\n        flex: 0.1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    titleText: {\r\n        fontSize: 30,\r\n        fontWeight: \"bold\",\r\n        color: \"white\"\r\n    },\r\n    mapContainer: {\r\n        flex: 0.7\r\n    },\r\n    map: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    infoContainer: {\r\n        flex: 0.2,\r\n        backgroundColor: 'white',\r\n        marginTop: -10,\r\n        borderTopLeftRadius: 30,\r\n        borderTopRightRadius: 30,\r\n        padding: 30\r\n    },\r\n    infoText: {\r\n        fontSize: 15,\r\n        color: \"black\",\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}